<?xml version="1.0" encoding="UTF-8"?>

<?include Variables.wxi ?>

<Wix xmlns="http://wixtoolset.org/schemas/v4/wxs" xmlns:util="http://wixtoolset.org/schemas/v4/wxs/util">

	<!--Variable for Agent Service Directory-->
	<?define Agent_Service_TargetDir=$(var.IvsAgent.TargetDir)?>

	<!--Variable for Sample Application Directory-->
	<?define Tray_Application_TargetDir=$(var.IvsTray.TargetDir)?>

	<Package Name="$(var.Name)" Manufacturer="$(var.Manufacturer)" UpgradeCode="$(var.UpgradeCode)" Version="$(var.Version)" Language="1033" InstallerVersion="200">

		<!--Setup or Installer with properties-->
		<SummaryInformation Manufacturer="$(var.Manufacturer)" />

		<!-- Allow upgrades and prevent downgrades -->
		<MajorUpgrade Schedule="afterInstallInitialize" DowngradeErrorMessage="A newer version of [ProductName] is already installed." />

		<!--Embed Cabinet into single msi file-->
		<MediaTemplate EmbedCab="yes" />

		<!--User provided Property values in registry keys and use a RegistrySearch to read them back out for repair, upgrade and uninstall-->

		<!--Fetch property of WAZUH_MANAGER-->
		<Property Id="WAZUH_MANAGER">
			<RegistrySearch Id="WazuhManagerIp" Root="HKLM" Key="SOFTWARE\infopercxept" Name="WAZUH_MANAGER" Type="raw" />
		</Property>

		<!--Fetch property of WAZUH_REGISTRATION_SERVER-->
		<Property Id="WAZUH_REGISTRATION_SERVER">
			<RegistrySearch Id="WazuhRegistrationIp" Root="HKLM" Key="SOFTWARE\infopercxept" Name="WAZUH_REGISTRATION_SERVER" Type="raw" />
		</Property>

		<!--Fetch property of WAZUH_AGENT_GROUP-->
		<Property Id="WAZUH_AGENT_GROUP">
			<RegistrySearch Id="WazuhAgentGroup" Root="HKLM" Key="SOFTWARE\infopercxept" Name="WAZUH_AGENT_GROUP" Type="raw" />
		</Property>

		<!--Fetch property of WAZUH_REGISTRATION_TYPE-->
		<Property Id="WAZUH_REGISTRATION_TYPE">
			<RegistrySearch Id="WazuhAuthType" Root="HKLM" Key="SOFTWARE\infopercxept" Name="WAZUH_REGISTRATION_TYPE" Type="raw" />
		</Property>

		<!--Fetch property of WAZUH_REGISTRATION_PASSWORD-->
		<Property Id="WAZUH_REGISTRATION_PASSWORD">
			<RegistrySearch Id="WazuhPassword" Root="HKLM" Key="SOFTWARE\infopercxept" Name="WAZUH_REGISTRATION_PASSWORD" Type="raw" />
		</Property>

		<!--Fetch property of WAZUH_REGISTRATION_KEY-->
		<Property Id="WAZUH_REGISTRATION_KEY">
			<RegistrySearch Id="WazuhCertKey" Root="HKLM" Key="SOFTWARE\infopercxept" Name="WAZUH_REGISTRATION_KEY" Type="raw" />
		</Property>

		<!--Fetch property of WAZUH_REGISTRATION_CERTIFICATE-->
		<Property Id="WAZUH_REGISTRATION_CERTIFICATE">
			<RegistrySearch Id="WazuhCertPath" Root="HKLM" Key="SOFTWARE\infopercxept" Name="WAZUH_REGISTRATION_CERTIFICATE" Type="raw" />
		</Property>

		<!--Fetch property of SKIP_ENDPOINT_DECEPTION-->
		<Property Id="SKIP_ENDPOINT_DECEPTION">
			<RegistrySearch Id="SkipDbytesId" Root="HKLM" Key="SOFTWARE\infopercxept" Name="SKIP_ENDPOINT_DECEPTION" Type="raw" />
		</Property>

		<!--Fetch property of DBYTES_SERVER-->
		<Property Id="DBYTES_SERVER">
			<RegistrySearch Id="DeceptiveBytesIp" Root="HKLM" Key="SOFTWARE\infopercxept" Name="DBYTES_SERVER" Type="raw" />
		</Property>

		<!--Fetch property of DBYTES_APIKEY-->
		<Property Id="DBYTES_APIKEY">
			<RegistrySearch Id="DeceptiveBytesApiKey" Root="HKLM" Key="SOFTWARE\infopercxept" Name="DBYTES_APIKEY" Type="raw" />
		</Property>

		<!--Adding the icon for msi -->
		<Icon Id="green_logo_22_22.ico" SourceFile="Assets\green_logo_22_22.ico" />
		<Property Id="ARPPRODUCTICON" Value="green_logo_22_22.ico" />

		<!--Main Feature for this Setup which can be found in Fragment Tag with ComponentGroupRef Id-->
		<Feature Id="ProductFeature" Title="$(var.Name)" Level="1">
			<ComponentRef Id="ConfigurationValues" />
			<ComponentGroupRef Id="AgentComponents" />
			<ComponentGroupRef Id="TrayComponents" />
			<ComponentGroupRef Id="ToolComponents" />
			<ComponentGroupRef Id="PostInstallation" />
		</Feature>

		<!--Tell MSI that restart should not be required-->
		<Property Id="MSIRESTARTMANAGERCONTROL" Value="Disable" />

		<!--Wix Extension to close IvsTray.exe file from System Tray-->
		<util:CloseApplication Id="CloseTray" Target="IvsTray.exe" CloseMessage="yes" RebootPrompt="no"></util:CloseApplication>

		<Binary Id="CustomActionBinary" SourceFile="$(var.CustomActions.TargetDir)$(var.CustomActions.TargetName).CA.dll" />
		<CustomAction Id="CheckSessionVariables" DllEntry="CheckSessionParameters" Execute="immediate" Return="check" BinaryRef="CustomActionBinary" />
		<CustomAction Id="StopAgentService" DllEntry="StopAgentService" Execute="immediate" Return="check" BinaryRef="CustomActionBinary" />
		<CustomAction Id="VerifyRemoveKey" DllEntry="VerifyRemoveKey" Execute="immediate" Return="check" BinaryRef="CustomActionBinary" />

		<InstallExecuteSequence>
			<Custom Action="CheckSessionVariables" Before="LaunchConditions" Condition="NOT Installed" />
			<Custom Action="StopAgentService" Before="LaunchConditions" Condition="Installed" />
			<Custom Action="VerifyRemoveKey" Before="LaunchConditions" Condition="Installed AND ( REMOVE = &quot;ALL&quot; OR AI_INSTALL_MODE = &quot;Remove&quot; ) AND NOT UPGRADINGPRODUCTCODE" />
		</InstallExecuteSequence>

	</Package>

	<!--Fragment to save properties-->
	<Fragment>
		<Component Id="ConfigurationValues" Directory="ManufacturerFolder" Bitness="always64">

			<RegistryKey Root="HKLM" Key="SOFTWARE\Infopercept">

				<!--add property of WAZUH_MANAGER with value and place it to "SOFTWARE\infopercept" -->
				<RegistryKey Key="ENDPOINT_DETECTION_AND_RESPONSE">

					<!--add property of WAZUH_MANAGER with value and place it to "SOFTWARE\infopercept" -->
					<RegistryValue Name="MANAGER_ADDR" Value="[WAZUH_MANAGER]" Type="string"></RegistryValue>

					<!--add property of WAZUH_REGISTRATION_SERVER with value and place it to "SOFTWARE\infopercept" -->
					<RegistryValue Name="REGISTRATION_SERVER_ADDR" Value="[WAZUH_REGISTRATION_SERVER]" Type="string"></RegistryValue>

					<!--add property of WAZUH_AGENT_GROUP with value and place it to "SOFTWARE\infopercept" -->
					<RegistryValue Name="AGENT_GROUP" Value="[WAZUH_AGENT_GROUP]" Type="string"></RegistryValue>

					<!--add property of WAZUH_REGISTRATION_TYPE with value and place it to "SOFTWARE\infopercept" -->
					<RegistryValue Name="REGISTRATION_TYPE" Value="[WAZUH_REGISTRATION_TYPE]" Type="string"></RegistryValue>
					
					<!--add property of WAZUH_REGISTRATION_PASSWORD with value and place it to "SOFTWARE\infopercept" -->
					<RegistryValue Name="REGISTRATION_PASSWORD" Value="[WAZUH_REGISTRATION_PASSWORD]" Type="string"></RegistryValue>
					
					<!--add property of WAZUH_REGISTRATION_CERTIFICATE with value and place it to "SOFTWARE\infopercept" -->
					<RegistryValue Name="REGISTRATION_CERTIFICATE" Value="[WAZUH_REGISTRATION_CERTIFICATE]" Type="string"></RegistryValue>

					<!--add property of REGISTRATION_KEY with value and place it to "SOFTWARE\infopercept" -->
					<RegistryValue Name="REGISTRATION_KEY" Value="[WAZUH_REGISTRATION_KEY]" Type="string"></RegistryValue>
				</RegistryKey>

				<!--add property of ENDPOINT_DECEPTION with value and place it to "SOFTWARE\infopercept" -->
				<RegistryKey Key="ENDPOINT_DECEPTION">
					<!--add property of SKIP_DBYTES with value and place it to "SOFTWARE\infopercept" -->
					<RegistryValue Name="SKIP_MONITORING" Value="[SKIP_ENDPOINT_DECEPTION]" Type="string" />

					<!--add property of DBYTES_SERVER with value and place it to "SOFTWARE\infopercept" -->
					<RegistryValue Name="SERVER_ADDR" Value="[DBYTES_SERVER]" Type="string" />

					<!--add property of DBYTES_APIKEY with value and place it to "SOFTWARE\infopercept" -->
					<RegistryValue Name="APIKEY" Value="[DBYTES_APIKEY]" Type="string" />
				</RegistryKey>

			</RegistryKey>
			<!--Removing old registry key before fresh installation-->
			<RemoveRegistryKey Action="removeOnInstall" Key="SOFTWARE\Infopercept" Root="HKLM" />
			<RemoveFile Id="RemoveOldLogId" Name="*.*" On="install" Directory="ManufacturerFolder" />
		</Component>
	</Fragment>

	<!--Fragment with details of installation directory-->
	<Fragment>
		<StandardDirectory Id="ProgramFiles64Folder">
			<Directory Id="ManufacturerFolder" Name="$(var.Manufacturer)">
				<Directory Id="AGENTFOLDER" Name="$(var.AgentName)" />
				<Directory Id="TRAYFOLDER" Name="$(var.TrayName)" />
			</Directory>
		</StandardDirectory>

		<!-- %AllUsersProfile%, C:\ProgramData -->
		<StandardDirectory Id="CommonAppDataFolder">
			<Directory Id="ProgramDataFolder" Name="$(var.Manufacturer)">
				<Directory Id="ARTIFACTSFOLDER" Name="$(var.ArtifactsName)" />
				<Directory Id="LOGFOLDER" Name="$(var.LogsFolder)" />
			</Directory>
		</StandardDirectory>

	</Fragment>

	<!--Fragment with Agent Service installation-->
	<Fragment>
		<ComponentGroup Id="AgentComponents" Directory="AGENTFOLDER">
			<Component Id="a00" Guid="380bbddd-daa7-0744-517b-37da768f5570" Bitness="always64">
				<File Id="a01" Source="$(var.Agent_Service_TargetDir)\Common.dll" />
				<File Id="a02" Source="$(var.Agent_Service_TargetDir)\Common.pdb" />
				<File Id="a03" Source="$(var.IvsAgent.TargetPath)" />
				<File Id="a04" Source="$(var.Agent_Service_TargetDir)\IvsAgent.exe.config" />
				<File Id="a05" Source="$(var.Agent_Service_TargetDir)\IvsAgent.pdb" />
				<File Id="a06" Source="$(var.Agent_Service_TargetDir)\ToolManager.dll" />
				<File Id="a17" Source="$(var.Agent_Service_TargetDir)\ToolManager.pdb" />
				<File Id="a10" Source="$(var.Agent_Service_TargetDir)\Newtonsoft.Json.dll" />
				<File Id="a11" Source="$(var.Agent_Service_TargetDir)\Serilog.dll" />
				<File Id="a12" Source="$(var.Agent_Service_TargetDir)\Serilog.Sinks.File.dll" />
				<File Id="a13" Source="$(var.Agent_Service_TargetDir)\Serilog.Sinks.File.pdb" />
				<File Id="a14" Source="$(var.Agent_Service_TargetDir)\System.CodeDom.dll" />
				<File Id="a15" Source="$(var.Agent_Service_TargetDir)\System.Security.Principal.Windows.dll" />
				<!--Removing all the old files on building new msi file-->
				<RemoveFile Id="AgentComponentsCopiedFiles" Name="*.*" On="install" />
			</Component>
		</ComponentGroup>
	</Fragment>

	<!--Fragment with Agent Tray installation-->
	<Fragment>
		<ComponentGroup Id="TrayComponents" Directory="TRAYFOLDER">
			<Component Id="b00" Guid="7E588662-AE80-401C-B2DE-29BB4CF1ECF3" Bitness="always64">
				<File Id="b01" Source="$(var.Tray_Application_TargetDir)\Common.dll" />
				<File Id="b02" Source="$(var.Tray_Application_TargetDir)\Common.pdb" />
				<File Id="b03" Source="$(var.IvsTray.TargetPath)" />
				<File Id="b04" Source="$(var.Tray_Application_TargetDir)\IvsTray.exe.config" />
				<File Id="b05" Source="$(var.Tray_Application_TargetDir)\IvsTray.pdb" />
				<File Id="b07" Source="$(var.Tray_Application_TargetDir)\Newtonsoft.Json.dll" />
				<File Id="b08" Source="$(var.Tray_Application_TargetDir)\Serilog.dll" />
				<File Id="b09" Source="$(var.Tray_Application_TargetDir)\Serilog.Sinks.File.dll" />
				<File Id="b10" Source="$(var.Tray_Application_TargetDir)\Serilog.Sinks.File.pdb" />
				<!--Removing all the old files on building new msi file-->
				<RemoveFile Id="TrayComponentsCopiedFiles" Name="*.*" On="install" />
				<!--Removing the traycomponent folder-->
				<RemoveFolder Id="TrayCompanentsFolder" Directory="TRAYFOLDER" On="install" />
			</Component>
		</ComponentGroup>

	</Fragment>

	<!--Fragment with Artifacts installation-->
	<Fragment>
		<ComponentGroup Id="ToolComponents" Directory="ARTIFACTSFOLDER">
			<Component Id="c00" Guid="DEF1F99A-A721-4F70-87BC-92E13E47B0B1" Bitness="always64">
				<File Id="c02" Source="..\artifacts\Sysmon\Sysmon64.exe" />
				<File Id="c03" Source="..\artifacts\osquery\osquery-5.8.2.msi" />
				<File Id="c04" Source="..\artifacts\osquery\osquery.conf" />
				<File Id="c05" Source="..\artifacts\osquery\osquery-packs.zip" />
				<File Id="c06" Source="..\artifacts\wazuh\wazuh-agent-4.4.1-1.msi" />

				<File Id="c06_1" Source="..\artifacts\wazuh\active-response\full-scan.exe" />
				<File Id="c06_3" Source="..\artifacts\wazuh\active-response\quick-scan.exe" />
				<File Id="c06_5" Source="..\artifacts\wazuh\active-response\isolation.exe" />
				<File Id="c06_7" Source="..\artifacts\wazuh\active-response\unisolation.exe" />

				<File Id="c07" Source="..\artifacts\wazuh\local_internal_options.conf" />
				
				<File Id="c08" Source="..\artifacts\dbytes\DeceptiveBytes.EPS.x64.msi" />
				<!--Removing all the old files on building new msi file-->
				<RemoveFile Id="ToolComponentsCopiedFiles" Name="*.*" On="install" />
			</Component>
		</ComponentGroup>
	</Fragment>

	<!--Fragment with post installation steps-->
	<Fragment>
		<ComponentGroup Id="PostInstallation" Directory="AGENTFOLDER">
			<Component Id="s0" Guid="868F4F33-6851-4169-B814-F25842A2D414" Bitness="always64">
				<File Id="AgentEXE" Name="IvsAgent" DiskId="1" Source="$(var.IvsAgent.TargetPath)" KeyPath="yes" />
				<ServiceInstall Id="s1" Name="IvsAgent" DisplayName="Invinsense 4.0" Description="Invinsense Service" ErrorControl="normal" Start="auto" Type="ownProcess" />
				<ServiceControl Id="s2" Name="IvsAgent" Start="install" Stop="both" Remove="both" Wait="yes" />
			</Component>
		</ComponentGroup>
	</Fragment>
</Wix>
